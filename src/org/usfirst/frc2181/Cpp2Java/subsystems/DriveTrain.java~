// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2181.Cpp2Java.subsystems;

import org.usfirst.frc2181.Cpp2Java.RobotMap;
import org.usfirst.frc2181.Cpp2Java.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Subsystem;

import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.RobotDrive;


/**
 *
 */
public class DriveTrain extends Subsystem {
	

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    public static final int LIMIT = 1;
    public static final int DEADZONE_THRESH = 0;
    public static final int LEFT_X = 0;
    public static final int LEFT_Y = 1;
    public static final int RIGHT_X = 4;
    public static final int RIGHT_Y = 5;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon motorFL = RobotMap.driveTrainMotorFL;
    private final CANTalon motorFR = RobotMap.driveTrainMotorFR;
    private final CANTalon motorBL = RobotMap.driveTrainMotorBL;
    private final CANTalon motorBR = RobotMap.driveTrainMotorBR;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveTrainDefault());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public double deadzone(Joystick j, int axis) {
    	double temp = j.getRawAxis(axis);
    	if (Math.abs(temp) <= DEADZONE_THRESH) {
    		return 0;
    	} else {
    		return temp;
    	}
    }
    
    public void drive(Joystick j) {
    	double x = LIMIT*j.getRawAxis(LEFT_X);
    	double y = LIMIT*j.getRawAxis(LEFT_Y);
    	double z = 0.7*j.getRawAxis(RIGHT_X);
    	
    	//motorControl.mecanumDrive_Cartesian(x, y, z);
    }
    
    public void driveAuto(double x, double y, double rot) {
    	//motorControl.mecanumDrive_Cartesian(x, y, rot);
    }
}

